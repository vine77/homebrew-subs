#!/usr/bin/env bash

set -euo pipefail

print_usage() {
  cat << EOF
Usage: subs <command> <URL>

Commands:
  dl      Download and extract subtitles from a video
  clean   Download and clean up subtitles using OpenAI

Options:
  -h, --help     Show this help message

Examples:
  subs dl "https://www.youtube.com/watch?v=VUxMfyzTM_Y"
  subs clean "https://www.youtube.com/watch?v=VUxMfyzTM_Y"
EOF
}

subs_dl() {
  local url="$1"
  if [ -z "$url" ]; then
    echo "Error: URL is required"
    echo "Usage: subs dl <URL>"
    exit 1
  fi

  yt-dlp --quiet --no-warnings --skip-download --write-subs --write-auto-subs --sub-lang "en.*" "$url" \
    && [ -f *.en-orig.vtt ] \
    && sed -E "/-->|WEBVTT|^Kind:|^Language:|^[[:space:]]*$/d; s/<[^>]*>//g; s/^[[:space:]]+//; s/[[:space:]]+$//" *.en-orig.vtt \
    | awk '!seen[$0]++' \
    | tr "\n" " " \
    && rm -f *.vtt || { echo "Error: Failed to process subtitles."; exit 1; }
}

subs_clean() {
  local url="$1"
  if [ -z "$url" ]; then
    echo "Error: URL is required"
    echo "Usage: subs clean <URL>"
    exit 1
  fi

  if [ -z "${OPENAI_API_KEY:-}" ]; then
    echo "Error: OPENAI_API_KEY is not set. Please export your API key."
    exit 1
  fi

  transcript=$(subs_dl "$url")
  if [ -z "$transcript" ]; then
    echo "Error: Could not extract subtitles or no subtitles available."
    exit 1
  fi

  escaped_transcript=$(jq -R -s '.' <<< "$transcript")

  cleaned_transcript=$(curl -s "https://api.openai.com/v1/chat/completions" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d "{
      \"model\": \"gpt-4\",
      \"messages\": [
        {
          \"role\": \"system\",
          \"content\": \"You are an expert copywriter that will be given captions from a video. Assume that what you are provided is the video's entire transcript. Carefully punctuate (without overusing exclamation points), add paragraph breaks, and fix the transcription, but without changing the original tone or phrasing. Do not summarize, truncate, or annotate. Simply output the entire revised transcript verbatim.\"
        },
        {
          \"role\": \"user\",
          \"content\": $escaped_transcript
        }
      ]
    }" | jq -r '.choices[0].message.content')

  if [ -n "$cleaned_transcript" ]; then
    echo "$cleaned_transcript"
  else
    echo "Error: OpenAI API failed to process the transcript."
    exit 1
  fi
}

if [ $# -eq 0 ]; then
  print_usage
  exit 1
fi

if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
  print_usage
  exit 0
fi

case "$1" in
  dl)
    shift
    subs_dl "${1:-}"
    ;;
  clean)
    shift
    subs_clean "${1:-}"
    ;;
  *)
    echo "Error: Unknown command: $1"
    print_usage
    exit 1
    ;;
esac
